<?php 
use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\user\UserInterface;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Annotation\QueueWorker;
use Drupal\Core\Session\AccountProxyInterface;
use Drupal\Core\Access\AccessResult;
use Drupal\Core\Session\AccountInterface;



function hello_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {

    // Main module help for the block module.
    case 'help.page.hello':
      return '<p>' . t('Blocks are boxes of content rendered into an area, or region, of a web page. The default theme Bartik, for example, implements the regions "Sidebar first", "Sidebar second", "Featured", "Content", "Header", "Footer", etc., and a block may appear in any one of these areas. The <a href=":blocks">blocks administration page</a> provides a drag-and-drop interface for assigning a block to a region, and for controlling the order of blocks within regions.', [
        ':blocks' => \Drupal::url('block.admin_display'),
      ]) . '</p>';
  }
}
function hello_cron() {
    //\Drupal::messenger()->addMessage(t('Hello cron.'));

    $interval = \Drupal::config('hello.settings')->get('choice_activity');
     $time = \Drupal::service('datetime.time')->getCurrentTime();
     $date_fin = $time - ($interval * 86400);
     \Drupal::database()->delete('hello_user_statistics')
      ->condition('time', $date_fin, '<')
      ->execute();
      
  }

  function hello_user_login(UserInterface $account) {
    $config = \Drupal::config('system.date');
    \Drupal::messenger()->addMessage(t('Welcome dear %name!',['%name' => $account->getAccountName()]));

    \Drupal::database()->insert('hello_user_statistics')
    ->fields([
      'uid' => $account->id(),
      'action' => '1',
      'time' => REQUEST_TIME,
    ])
    ->execute();
}

function hello_user_logout(AccountProxyInterface $account) {
    $config = \Drupal::config('system.date');
    \Drupal::messenger()->addMessage(t('Welcome dear %name!',['%name' => $account->getAccountName()]));
    
    \Drupal::database()->insert('hello_user_statistics')
    ->fields([
      'uid' => $account->id(),
      'action' => '0',
      'time' => REQUEST_TIME,
    ])
    ->execute();
}
    
function hello_theme($existing, $theme, $path){
  return [
'hello-user-connexion'=> [
'template'=> 'hello-user-connexion',
// Automatiquement appelé en fonction du nom du hook de thème.
'variables'=> [
'user'=> NULL,
'count'=> NULL,
        ],
    ],
  ];
}

function hello_page_attachments(array &$page) {
  $page['#attached']['library'][] = 'hello/user.style';
}

/**
   * {@inheritdoc}.
   */
